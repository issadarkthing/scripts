#!/usr/bin/env bb

(defn get-input [prompt]
  (let [console (System/console)]
    (->>
      (into-array [prompt])
      (.readPassword console "%s")
      (apply str))))

(defn sha-1 [^String s] 
  (->>
    (.getBytes s)
    (.digest (java.security.MessageDigest/getInstance "SHA"))
    (map #(format "%02X" %))
    (apply str)))

(defn find-in [pred coll]
  (if-not coll
    nil
    (let [x (first coll)]
      (if (pred x)
        x
        (recur pred (next coll))))))

(defn get-pwned [passw]
  (let [[prefix remain] (map #(apply str %) (split-at 5 (sha-1 passw)))]
   (->>
     (shell/sh "curl" "-Ss" (str "https://api.pwnedpasswords.com/range/" prefix))
     (:out)
     (str/split-lines)
     (find-in #(str/includes? % remain)))))


(defn pwned [passw]
  (second (str/split (get-pwned passw) #":")))


(let [input (get-input "Password: ")
      result (pwned input)]
  (println (str "password has been found " result " time(s)")))
